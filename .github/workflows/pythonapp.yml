name: Devops application

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./app_python/
          file: ./app_python/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/devops:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  Lint_and_test:
    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     image: postgres:10.8
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: github_actions
    #     ports:
    #       - 5432:5432
    #     # needed because the postgres container does not provide a healthcheck
    #     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app_python/requirements.txt
        pip install -r app_python/requirements-dev.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with black
      run: |
        black --check .
    - name: Run tests
      run: |
        make test
    # - name: Generate html
    #   run: |
    #     coverage html
    # - name: Save coverage html report to artifacts
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: htmlcov
    #     path: htmlcov
